/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lucene.ir.evaluation;

import java.nio.file.Files;
import java.nio.file.FileSystems;
import java.util.List;
import java.util.ArrayList;
import java.io.IOException;

import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.StringField;
import org.apache.lucene.document.TextField;

public class App {

    public static void main(String[] args) {
        List<String[]> movies = getMovies();
		if (movies != null) {
			try {
				indexMovies(movies);
			} catch (IOException e) {
				System.out.println(e.getMessage());
			}	
		}
    }

    private static List<String[]> getMovies() {
        List<String> movieLines = null;
        try {
            movieLines = Files.readAllLines(FileSystems.getDefault().getPath("..", "datasets", "movies.txt"));
        } catch (java.io.IOException e) {
            System.out.println(e.getMessage());
        }
        List<String[]> movies = new ArrayList<>();
        for (String line : movieLines) {
            movies.add(line.split("\t"));
        }
        return movies;
    }

    private static void indexMovies(List<String[]> movies) throws IOException {
        Directory index = FSDirectory.open(FileSystems.getDefault().getPath("data"));
        StandardAnalyzer analyzer = new StandardAnalyzer();
        IndexWriterConfig config = new IndexWriterConfig(analyzer);
        IndexWriter writer = new IndexWriter(index, config);

		Document doc = null;
		for (String[] movie : movies) {
			doc = new Document();
			doc.add(new TextField("title", movie[0], Field.Store.YES));
			doc.add(new TextField("body", movie[1], Field.Store.YES));
			writer.addDocument(doc);
		}
    }
}
